<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>JVM垃圾回收 on Luky116 Blog</title>
    <link>http://luky116.github.io/tags/jvm%E5%9E%83%E5%9C%BE%E5%9B%9E%E6%94%B6/</link>
    <description>Recent content in JVM垃圾回收 on Luky116 Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Sun, 24 Sep 2017 14:43:00 +0800</lastBuildDate>
    
	<atom:link href="http://luky116.github.io/tags/jvm%E5%9E%83%E5%9C%BE%E5%9B%9E%E6%94%B6/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>垃圾回收和内存分配策略</title>
      <link>http://luky116.github.io/post/%E5%9E%83%E5%9C%BE%E5%9B%9E%E6%94%B6%E5%92%8C%E5%86%85%E5%AD%98%E5%88%86%E9%85%8D%E7%AD%96%E7%95%A5/</link>
      <pubDate>Sun, 24 Sep 2017 14:43:00 +0800</pubDate>
      
      <guid>http://luky116.github.io/post/%E5%9E%83%E5%9C%BE%E5%9B%9E%E6%94%B6%E5%92%8C%E5%86%85%E5%AD%98%E5%88%86%E9%85%8D%E7%AD%96%E7%95%A5/</guid>
      <description>由于程序计数器、虚拟机栈、本地方法栈随线程而生，随线程而灭一般的垃圾回收指Java 堆和方法区出的内存回收。 1 如何判断对象是否已死 1.1 引用计数器</description>
    </item>
    
  </channel>
</rss>